apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.lit.kcustomercore"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation rootProject.ext.dependencies["appcompat"]
//    implementation 'androidx.core:core-ktx:1.3.2'
    implementation rootProject.ext.dependencies["ktx_core"]
    implementation rootProject.ext.dependencies["constraintlayout"]
    implementation project(path: ':krecyclerview')
    implementation project(path: ':base')
    implementation project(path: ":video")
    implementation project(path: ':download')
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["test_junit"]
    androidTestImplementation rootProject.ext.dependencies["espresso"]

    implementation rootProject.ext.dependencies["recyclerview"]
    //Glide
    implementation(rootProject.ext.dependencies["glide"]) {
        exclude group: "com.android.support"
    }
    implementation rootProject.ext.dependencies["glide_transformations"]

    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["rxjava3"]
    implementation rootProject.ext.dependencies["rxandroid"]
    //RxJava和retrofit的结合使用 RxJava2CallAdapterFactory
    implementation rootProject.ext.dependencies["retrofit_adapter_rxjava3"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["converter_gson"]
    implementation rootProject.ext.dependencies["converter_scalars"]

    implementation rootProject.ext.dependencies["viewModel_ktx"]
    implementation rootProject.ext.dependencies["livedata_ktx"]
    implementation rootProject.ext.dependencies["lifecycle_extension"]
    
    implementation rootProject.ext.dependencies["navigation_fragment"]
    implementation rootProject.ext.dependencies["navigation_ui"]
    implementation rootProject.ext.dependencies["immersionbar"]
    implementation rootProject.ext.dependencies["BannerViewPager"]
    implementation rootProject.ext.dependencies["kotlinx_coroutines_core"]
    implementation rootProject.ext.dependencies["kotlinx_coroutines_android"]
    implementation rootProject.ext.dependencies["EasyNavigation"]

    implementation rootProject.ext.dependencies["circleImageView"]
    implementation rootProject.ext.dependencies["GSYVideoPlayer"]

//    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha06'
    implementation rootProject.ext.dependencies["refresh_header_material"]
    implementation rootProject.ext.dependencies["refresh-layout-kernel"]
}
